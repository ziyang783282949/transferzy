<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/context 
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
		   http://www.springframework.org/schema/mvc 
		   http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
           http://www.springframework.org/schema/aop 
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
           http://www.springframework.org/schema/tx 
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/task 
           http://www.springframework.org/schema/task/spring-task.xsd">


	<!-- thread pool -->
	<import resource="classpath:conf/core/service.xml" />
	<import resource="classpath:conf/core/webservice.xml" />

	<!-- @responsebody返回值编码问题 -->
	<bean class="com.spirit.porker.filter.UTFStringHttpMessage" />

	<!-- 会在Spring MVC上下文中定义一个org.springframework.web.servlet.resource.DefaultServletHttpRequestHandler，它会像一个检查员，对进入DispatcherServlet的URL进行筛查，如果发现是静态资源的请求，就将该请求转由Web应用服务器默认的Servlet处理，如果不是静态资源的请求，才由DispatcherServlet继续处理 -->
	<mvc:default-servlet-handler />

	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean class="com.spirit.porker.interceptor.GlobalHandlerInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

	<context:annotation-config />
	<context:component-scan base-package="com.spirit.porker" />
	<mvc:annotation-driven />
	<aop:aspectj-autoproxy proxy-target-class="true" />

	<!-- 任务调度器 -->
	<task:scheduler id="scheduler" pool-size="5" />
	<!-- 任务执行器 -->
	<task:executor id="executor" pool-size="5" />
	<!--开启注解调度支持 @Async @Scheduled -->
	<task:annotation-driven executor="executor"
		scheduler="scheduler" proxy-target-class="true" />


	<!--数据库配置 -->
	<import resource="classpath:conf/core/database.xml" />

	<!--shiro配置 -->
	<import resource="classpath:conf/core/shiro.xml" />

	<!-- 配置Velocity引擎 -->
	<bean id="velocityConfigurer"
		class="org.springframework.web.servlet.view.velocity.VelocityConfigurer">
		<property name="resourceLoaderPath">
			<value>/WEB-INF/views/</value>
		</property>
		<property name="velocityProperties">
			<props>
				<prop key="input.encoding">UTF-8</prop>
				<prop key="output.encoding">UTF-8</prop>
			</props>
		</property>
	</bean>
	<!-- 配置Velocity视图解析器 -->
	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.velocity.VelocityViewResolver">
		<property name="exposeSpringMacroHelpers">
			<value>true</value>
		</property>
		<property name="requestContextAttribute">
			<value>rc</value>
		</property>
		<property name="suffix">
			<value>.html</value>
		</property>
		<property name="contentType">
			<value>text/html;charset=UTF-8</value>
		</property>
	</bean>

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- 对静态资源的访问配置 -->
	<!-- 首先，<mvc:resources />允许静态资源放在任何地方，如WEB-INF目录下、类路径下等，你甚至可以将JavaScript等静态文件打到JAR包中。通过location属性指定静态资源的位置，由于location属性是Resources类型，因此可以使用诸如"classpath:"等的资源前缀指定资源位置。传统Web容器的静态资源只能放在Web容器的根路径下，<mvc:resources 
		/>完全打破了这个限制。 -->
	<mvc:resources mapping="/**/*.jpg" location="/WEB-INF/"
		cache-period="31556926" />
	<mvc:resources mapping="/**/*.png" location="/WEB-INF/"
		cache-period="31556926" />
	<mvc:resources mapping="/**/*.css" location="/WEB-INF/"
		cache-period="31556926" />
	<mvc:resources mapping="/**/*.js" location="/WEB-INF/"
		cache-period="31556926" />
	<mvc:resources mapping="/**/*.html" location="/WEB-INF/views/"
		cache-period="31556926" />


</beans>